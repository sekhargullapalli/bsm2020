# -*- coding: utf-8 -*-
"""valuefunctions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UTX1GviQOKlGXzsjfE4S47hW5YmQubQ8
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
import pandas as  pd
import matplotlib.pyplot as plt
from matplotlib import rcParams

def VA1(x):
    if(x<=1 or x>=4):
        return 0
    elif (x>=2 and x<=3):
        return 1
    elif (x>1 and  x<2):
        return x - 1.0
    elif (x>3 and  x<4):
        return 4.0 - x  
    else: 
        return 0

def VA2(x):
    if (x>=0.6):
        return 0
    elif(x>=0 and x<=0.3):
        return 1
    elif(x>0.3 and x<0.6):
        return 2.0 - x/0.3
    else:
        return 0   

def VA3(x):
    if (x>=25):
        return 0
    elif(x>=0 and x<=15):
        return 1
    elif(x>15 and x<25):
        return 2.5 - x/10
    else:
        return 0   

def VA4(x):
    if(x>=20):
        return 1
    elif (x>=0 and x<20):
        return x/20
    else:
        return 0
 

fig, ((a1, a2, a3), (a4, a5, a6)) = plt.subplots(2, 3,figsize=(15,8))
rcParams["font.family"] = "Times New Roman"


x_a1 = np.linspace(1.0,4.0,500)
y_a1 = np.array([VA1(xi) for xi in x_a1])
a1.scatter(x_a1, y_a1, s=7, c=y_a1, cmap='jet')
a1.set_xticks([0,1,2,3,4,5])
a1.set_ylim(0,1.2)
a1.grid(True)
a1.title.set_text('(a) Supply quantity (tonne)')
a1.title.set_fontweight('bold')

x_a2 = np.linspace(0.0,0.9,500)
y_a2 = np.array([VA2(xi) for xi in x_a2])
a2.scatter(x_a2, y_a2, s=7, c=y_a2, cmap='jet')
a2.set_xticks([0,0.3,0.6,0.9])
#a2.set_xticks(np.linspace(0,0.9,7))
a2.set_ylim(0,1.2)
a2.grid(True)
a2.title.set_text('(b) Supply stability (tonne)')
a2.title.set_fontweight('bold')

x_a3 = np.linspace(0.0,30,500)
y_a3 = np.array([VA3(xi) for xi in x_a3])
a3.scatter(x_a3, y_a3, s=7, c=y_a3, cmap='jet')
a3.set_xticks([0,5,10,15,20,25,30])
a3.set_ylim(0,1.2)
a3.grid(True)
a3.title.set_text('(c) Delay time (min)')
a3.title.set_fontweight('bold')

x_a4 = np.linspace(0.0,30,500)
y_a4 = np.array([VA4(xi) for xi in x_a4])
a4.scatter(x_a4, y_a4, s=7, c=y_a4, cmap='jet')
a4.set_xticks([0,5,10,15,20,25,30])
a4.set_ylim(0,1.2)
a4.grid(True)
a4.title.set_text('(d) Supply ratio (%)')
a4.title.set_fontweight('bold')

y_a5=[0,0.5,1.0]
a5.bar(['L','M','H'],y_a5,width=0.3)
a5.set_ylim(0,1.2)
a5.grid(True)
a5.title.set_text('(e) Payment reputation')
a5.title.set_fontweight('bold')
for i, v in enumerate(y_a5):
    a5.text(i, v + .05, f'({str(v)})', color='black', fontweight='bold', ha='center')

y_a6=[1.0,0.5,0]
a6.bar(['(DL,VL,L)','(VL,L,M)','(L,M,H)'],y_a6, width=0.3)
a6.set_ylim(0,1.2)
a6.grid(True)
a6.title.set_text('(f) Switching risk')
a6.title.set_fontweight('bold')
for i, v in enumerate(y_a6):
    a6.text(i, v + .05, f'({str(v)})', color='black', fontweight='bold', ha='center')

rcParams["savefig.format"] = 'png'
rcParams["savefig.facecolor"] = 'white'
rcParams["savefig.facecolor"] = 'white'
plt.savefig('valuefunctions.jpg',transparent=False,bbox_inches='tight',pad_inches=0.3)